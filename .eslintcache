[{"C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\reportWebVitals.js":"1","C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\App.js":"2","C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\Components\\DishdetailComponent.js":"3","C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\redux\\dishes.js":"4","C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\redux\\leaders.js":"5","C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\Components\\LoadingComponent.js":"6","C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\shared\\baseUrl.js":"7","C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\index.js":"8","C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\Components\\MainComponent.js":"9","C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\Components\\FooterComponent.js":"10","C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\redux\\ActionTypes.js":"11","C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\Components\\HeaderComponent.js":"12"},{"size":362,"mtime":1612048023559,"results":"13","hashOfConfig":"14"},{"size":523,"mtime":1612078224184,"results":"15","hashOfConfig":"14"},{"size":7989,"mtime":1612078100858,"results":"16","hashOfConfig":"14"},{"size":609,"mtime":1612078129588,"results":"17","hashOfConfig":"14"},{"size":602,"mtime":1612078129597,"results":"18","hashOfConfig":"14"},{"size":256,"mtime":1612078100876,"results":"19","hashOfConfig":"14"},{"size":48,"mtime":1612078142527,"results":"20","hashOfConfig":"14"},{"size":639,"mtime":1612078300081,"results":"21","hashOfConfig":"14"},{"size":4047,"mtime":1612078100880,"results":"22","hashOfConfig":"14"},{"size":2659,"mtime":1612078100863,"results":"23","hashOfConfig":"14"},{"size":609,"mtime":1612078129575,"results":"24","hashOfConfig":"14"},{"size":5154,"mtime":1612079887545,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1tz09ty",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\reportWebVitals.js",[],["52","53"],"C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\App.js",[],"C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\Components\\DishdetailComponent.js",["54","55","56"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Row, Col, Label,  Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        \r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}> <span className=\"fa fa-pencil\"></span> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Submit Comment\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option>Rate us</option>\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"fauthor\" name=\"author\"  placeholder=\"Your Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required, ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\"  id=\"comment\" name=\"comment\" rows=\"6\"  className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Button type=\"submit\" color=\"primary\"> Submit </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n             </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderDish({dish}) {\r\n    \r\n    return(\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div> \r\n    );\r\n  }\r\n\r\n  function RenderComments({comments, postComment, dishId}) {\r\n    \r\n    if(comments != null){\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\"> \r\n                    <Stagger in>\r\n                        {comments.map((comment) => {\r\n                            return (\r\n                                <Fade in>\r\n                                <li key={comment.id}>\r\n                                <p>{comment.comment}</p>\r\n                                <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                </li>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                    </Stagger>\r\n                </ul>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>  \r\n        );\r\n    }else{\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n  }\r\n\r\n  const  DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) \r\n    \r\n    if(props.dish != null)\r\n    return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                        <RenderDish dish={props.dish} />\r\n                        <RenderComments comments={props.comments}\r\n                            postComment={props.postComment}\r\n                            dishId={props.dish.id}\r\n                        />\r\n           \r\n                </div>\r\n            </div>\r\n    );\r\n    else\r\n        return(\r\n            <div></div>\r\n        );\r\n  }\r\n\r\n  \r\nexport default DishDetail;","C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\redux\\dishes.js",[],"C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\redux\\leaders.js",[],"C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\Components\\LoadingComponent.js",[],"C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\shared\\baseUrl.js",[],"C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\index.js",[],"C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\Components\\MainComponent.js",[],"C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\Components\\FooterComponent.js",[],"C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\redux\\ActionTypes.js",[],"C:\\Users\\HP\\Documents\\WEB Design\\COURSERA\\ristorante\\ristorante\\src\\Components\\HeaderComponent.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":51,"column":37,"nodeType":"63","endLine":51,"endColumn":108},{"ruleId":"61","severity":1,"message":"64","line":64,"column":37,"nodeType":"63","endLine":68,"endColumn":39},{"ruleId":"61","severity":1,"message":"65","line":84,"column":37,"nodeType":"63","endLine":84,"endColumn":137},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]